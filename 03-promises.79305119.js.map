{"mappings":"iiBAoCA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAACC,GAC1DA,EAAMC,iBAEN,IAAMC,EAAQC,SAASN,SAASC,cAAc,kBAAkBM,OAC1DC,EAAOF,SAASN,SAASC,cAAc,iBAAiBM,OACxDE,EAASH,SAASN,SAASC,cAAc,mBAAmBM,OAElE,GAAIC,EAAO,GAAKH,EAAQ,GAAKI,GAAU,EACrCC,EAAAtB,GAASuB,OAAOC,QAAQ,+DAI1B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAE/BvB,EADiBuB,EAAI,EACGR,EAAQQ,EAAIL,GACjCM,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBkB,EAAAtB,GAASuB,OAAOK,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAEvE0B,OAAM,SAAAH,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBkB,EAAAtB,GAASuB,OAAOC,QAAQ,sBAAqCK,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// import notiflix from 'notiflix';\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// document.querySelector('.form').addEventListener('submit', (event) => {\n//   event.preventDefault();\n\n//   const delay = parseInt(document.querySelector('[name=\"delay\"]').value);\n//   const step = parseInt(document.querySelector('[name=\"step\"]').value);\n//   const amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n\n//   for (let i = 0; i < amount; i++) {\n//     const position = i + 1;\n//     createPromise(position, delay + i * step)\n//       .then(({ position, delay }) => {\n//         notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//   }\n// });\n\n\n\nimport notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const delay = parseInt(document.querySelector('[name=\"delay\"]').value);\n  const step = parseInt(document.querySelector('[name=\"step\"]').value);\n  const amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n\n  if (step < 0 || delay < 0 || amount <= 0) {\n    notiflix.Notify.failure('Please enter valid values for delay, step, and amount.');\n    return;\n  }\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    createPromise(position, delay + i * step)\n      .then(({ position, delay }) => {\n        notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.79305119.js.map"}